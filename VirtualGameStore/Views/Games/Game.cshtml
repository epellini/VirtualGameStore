@model GameDetailsViewModel

@{
    ViewData["Title"] = Model.Name;
}
@section scripts {
    <script src="~/js/site.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
}

<div class="row justify-content-center">
    <div class="col-lg-8 col-xl-6 col-12">
        <div class="card shadow bg-night text-snow-bright my-4">
            <div class="row m-0 ratio ratio-21x9">
                @{
                    Picture? picture = null;
                }
                @if (Model.Pictures != null)
                {
                    picture = Model.Pictures.Where(p => p.IsCoverArt == true).FirstOrDefault();
                }
                @if (picture != null)
                {
                    <img src="/images/@picture.PictureId" class="card-img-top p-0" alt="@picture.AltText" style="object-fit: cover">
                }
                else
                {
                    <img src="~/images/no-image.png" class="card-img-top p-0" alt="@Model.Name cover image" style="object-fit: cover">
                }
            </div>
            <div class="row justify-content-between text-start p-2 m-0 bg-shade">
                <h4 class="card-title col-auto text-uppercase fw-bold">@Model.Name</h4>
                <div class="col-auto">
                    <div class="row">
                        @if (Model.Rating == null)
                        {
                            for (int i = 0; i < 5; i++)
                            {
                                <span role="button" id="@Model.GameId-star-@(i+1)" class="col-auto p-0 pe-1 star">
                                    <svg class="svg-icon svg-icon-snow icon-rate" fill="" width="18" height="18" viewBox="0 0 16 16">
                                        <path d="M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.565.565 0 0 0-.163-.505L1.71 6.745l4.052-.576a.525.525 0 0 0 .393-.288L8 2.223l1.847 3.658a.525.525 0 0 0 .393.288l4.052.575-2.906 2.77a.565.565 0 0 0-.163.506l.694 3.957-3.686-1.894a.503.503 0 0 0-.461 0z" />
                                    </svg>
                                </span>
                            }
                        }
                        else
                        {
                            for (int i = 0; i < Model.Rating; i++)
                            {
                                <span role="button" id="@Model.GameId-star-@(i+1)" class="col-auto p-0 pe-1 star">
                                    <svg class="svg-icon svg-icon-snow icon-rate" fill="" width="18" height="18" viewBox="0 0 16 16">
                                        <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z" />
                                    </svg>
                                </span>
                            }
                            for (int i = (int)Model.Rating; i < 5; i++)
                            {
                                <span role="button" id="@Model.GameId-star-@(i+1)" class="col-auto p-0 pe-1 star">
                                    <svg class="svg-icon svg-icon-snow icon-rate" fill="" width="18" height="18" viewBox="0 0 16 16">
                                        <path d="M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.565.565 0 0 0-.163-.505L1.71 6.745l4.052-.576a.525.525 0 0 0 .393-.288L8 2.223l1.847 3.658a.525.525 0 0 0 .393.288l4.052.575-2.906 2.77a.565.565 0 0 0-.163.506l.694 3.957-3.686-1.894a.503.503 0 0 0-.461 0z" />
                                    </svg>
                                </span>
                            }
                        }
                    </div>
                </div>
                <div class="col-12">
                    <div class="row align-items-center">
                        @{string av = ((double)Model.AvgRating).ToString("0.0#");}
                        <svg class="svg-icon svg-icon-snow icon-rate col-auto" fill="" width="18" height="18" viewBox="0 0 16 16">
                            <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z" />
                        </svg>
                        <p class="p-0 m-0 ms-1 col-auto" id="averageRating">@av</p>
                    </div>
                </div>
            </div>
            <div class="card-body bg-night">
                <div class="row justify-content-start">
                    <div class="mb-4">
                        <p>Developer: <b>@Model.Developer</b></p>
                        <p>Release Date: <b>@Model.ReleaseDate.Value.ToString("d")</b></p>
                        <p>Description: <b>@Model.Description</b></p>

                        <div class="row">
                            @if (Model.RetailPrice == null || Model.RetailPrice <= 0.0)
                            {
                                <p>Price: <b>Free to Play</b></p>
                            }
                            else
                            {
                                <p>Price: <b>$@Model.RetailPrice CAD</b></p>
                            }
                        </div>

                        <div class="row">
                            <p class="col-auto pe-1">Platform(s):</p>
                            @for (int i = 0; i < Model.Platforms.Count(); i++)
                            {
                                string punct = i + 1 < Model.Platforms.Count() ? "," : "";

                                <p class="fw-bold col-auto px-1">@Model.Platforms[i].PlatformName@punct</p>
                            }
                        </div>
                        <div class="row">
                            <p class="col-auto pe-1">Genre(s):</p>
                            @for (int i = 0; i < Model.Genres.Count(); i++)
                            {
                                string punct = i + 1 < Model.Genres.Count() ? "," : "";

                                <p class="fw-bold col-auto px-1">@Model.Genres[i].GenreName@punct</p>
                            }
                        </div>
                        <div class="row">
                            <p class="col-auto pe-1">Language(s):</p>
                            @for (int i = 0; i < Model.Languages.Count(); i++)
                            {
                                string punct = i + 1 < Model.Languages.Count() ? "," : "";

                                <p class="fw-bold col-auto px-1">@Model.Languages[i].LanguageName@punct</p>
                            }
                        </div>
                    </div>
                </div>
                <div class="row justify-content-between p-2 m-0 mb-4">
                    <div class="col-6 px-1">
                        @if (Model.Wishlist != null && Model.Wishlist.Where(w => w.Game.GameId == Model.GameId).FirstOrDefault() != null)
                        {
                            <a role="button" onclick="addGameToWishlist(@Model.GameId)" id="WishlistBtn" class="col-12 btn btn-aurora-red-outline">Remove from Wishlist</a>
                        }
                        else
                        {
                            <a role="button" onclick="addGameToWishlist(@Model.GameId)" id="WishlistBtn" class="col-12 btn btn-frost-outline">Add to Wishlist</a>
                        }
                    </div>
                    <div class="col-6 px-1">
                        <a href="#" class="col-12 btn btn-frost-primary">
                            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="20" fill="none" stroke="#2E3440" viewBox="0 0 24 28">
                                <path d="M6.29977 5H21L19 12H7.37671M20 16H8L6 3H3M9 20C9 20.5523 8.55228 21 8 21C7.44772 21 7 20.5523 7 20C7 19.4477 7.44772 19 8 19C8.55228 19 9 19.4477 9 20ZM20 20C20 20.5523 19.5523 21 19 21C18.4477 21 18 20.5523 18 20C18 19.4477 18.4477 19 19 19C19.5523 19 20 19.4477 20 20Z" stroke="#2E3440" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                            </svg>
                            Add to Cart
                        </a>
                    </div>
                </div>
                <div class="row justify-content-between">
                    <h4 class="text-uppercase fw-bold text-snow col-auto">Reviews</h4>
                    @if (Model.NewReview != null)
                    {
                        <a role="button" onclick="openReview()" class="link-danger link-frost text-uppercase fw-bold text-decoration-none col-auto">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-square mb-1 me-1" viewBox="0 0 16 16">
                                <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z" />
                                <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z" />
                            </svg>
                            Write a review
                        </a>
                    }
                </div>
                <div class="row">
                    @if (Model.NewReview != null)
                    {
                        <div id="review-form" class="col-12 d-none">
                            <form asp-action="SubmitReview" asp-controller="Games" asp-route-id="@Model.GameId">
                                <div class="row">
                                    <div class="col">
                                        <textarea class="form-control form-control-sm" asp-for="@Model.NewReview.ReviewText" placeholder="Review" rows="3"></textarea>
                                    </div>
                                </div>
                                <div class="row mb-3">
                                    <span asp-validation-for="@Model.NewReview.ReviewText" class="text-aurora-red"></span>
                                </div>
                                <div class="row mb-3">
                                    <div class="col">
                                        <button type="submit" class="btn btn-frost-primary">Submit</button>
                                    </div>
                                </div>
                                <input type="hidden" asp-for="@Model.NewReview.GameId" value="@Model.NewReview.GameId" />
                                <input type="hidden" asp-for="@Model.NewReview.UserId" value="@Model.NewReview.UserId" />
                                <input type="hidden" asp-for="@Model.NewReview.Game" value="@Model.NewReview.Game" />
                            </form>
                        </div>
                    }
                </div>
                <div class="row">
                    <div class="col-12">
                        <ul class="list-group list-group-flush">
                            @if (Model.PendingReviewCount != null && Model.PendingReviewCount > 0)
                            {
                                <li class="bg-aurora-orange text-night list-group-item d-flex m-2 rounded shadow-sm p-2 row">
                                    <div class="col-12">
										<div class="row m-0 p-0 align-items-center">
											<div class="col m-0 p-0">
												<div class="row align-items-center m-0 p-0">
                                                    <span class="fw-bold">You have @Model.PendingReviewCount pending review</span>
												</div>
											</div>
										</div>
									</div>
                                </li>
                            }
                            @foreach (Review review in Model.Reviews.Where(r => r.Status == "Approved"))
                            {
                                <li class="bg-night text-snow-deep list-group-item d-flex p-2 row">
                                    <a asp-action="ViewProfile" asp-controller="Account" asp-route-username="@review.User.UserName" class="m-0 p-0 fw-bold nav-link-snow text-decoration-none col-12">
                                        <div class="row m-0 p-0 align-items-center justify-content-between">
                                            <div class="col m-0 p-0">
                                                <div class="row align-items-center m-0 p-0">
                                                    @{
                                                        Photo? pfp = null;
                                                    }
                                                    @if (review.User.Profile.Photos != null)
                                                    {
                                                        pfp = review.User.Profile.Photos.Where(p => p.isProfilePic == true).FirstOrDefault();
                                                    }
                                                    @if (pfp != null)
                                                    {
                                                        <img src="/images/user-uploaded/@pfp.PhotoId" class="profile-pic p-1 ms-3 col-2" alt="@pfp.AltText" style="object-fit: cover">
                                                    }
                                                    else
                                                    {
                                                        <img src="~/images/blank-profile.png" class="profile-pic p-1 ms-3 col-2" alt="@review.User.UserName profile picture" style="object-fit: cover">
                                                    }
                                                    <p class="m-2 p-0 fw-bold col-auto">@review.User.UserName</p>
                                                </div>
                                            </div>
                                            <p class="m-2 p-0 text-secondary col-auto">@review.ReviewDate.Value.ToString("f")</p>
                                        </div>
                                    </a>
                                    <div class="row p-0 m-0">
                                        <p class="col-10 m-2">@review.ReviewText</p>
                                    </div>
                                    
                                </li>
                            }
                            @if (Model.Reviews == null || Model.Reviews.Where(r => r.Status == "Approved").Count() == 0)
                            {
                                <li class="bg-night text-snow-deep list-group-item d-flex p-2 row">
                                    <p class="text-uppercase fw-bold">None...</p>
                                </li>
                            }
                        </ul>
                        
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



